  {% comment %}
    This sections requires the same `paginate_by` variable value as
    the other sections for the ajax loading to work.
    If you change the number below, it must also be changed in:
    - sections/collection-template
    - sections/featured-collection-slider
    - snippets/page-block-featured-collection-slider
  {% endcomment %}
  {%- liquid
    assign paginate_by = 24
    assign ajax_paginate = false
    assign collection_count = 0

    assign collection = collections[section.settings.home_featured_products]
    if collection != blank
      assign collection_count = collection.all_products_count

      if collection_count > paginate_by
        assign ajax_paginate = true
      endif
    endif
  -%}

  {%- assign grid_item_width = 'grid-product--small' -%}
  {%- assign scrollable = true -%}
  {%- case section.settings.per_row -%}
    {%- when 'small' -%}
      {%- if collection_count <= 3 -%}
        {%- assign scrollable = false -%}
      {%- endif -%}
    {%- when 'medium' -%}
      {%- assign grid_item_width = 'grid-product--medium' -%}
    {%- when 'large' -%}
      {%- assign grid_item_width = 'grid-product--large' -%}
  {%- endcase -%}

  <div class="index-section index-section--overflow-scroller{% if section.settings.alt %} index-section--alt{% endif %}">

    <div
      id="CollectionSection-{{ section.id }}"
      data-section-id="{{ section.id }}"
      data-section-type="featured-collection"
      data-scrollable="true"
      data-product-sliders-mobile="false"
      data-paginate="{{ ajax_paginate }}"
      data-paginate-by="{{ paginate_by }}"
      data-collection-url="{{ collection.url }}"
      data-collection-count="{{ collection.all_products_count }}"
      data-grid-item-width="{{ grid_item_width }}"
      {% if section.settings.per_row == 'small' and collection.all_products_count <= 3 %} data-center-grid{% endif %}
      data-aos>
      {%- if section.settings.title != blank -%}
        <div class="page-width">
          <header class="section-header" data-aos>
            <h2 class="section-header__title appear-delay  ">


{% comment %} added code. per keyframers.
adjusting window.addEventListener('scroll',onScroll2) for second title 
bottom works alone, so second var and methods work. lot of cycling if keep scrolling, but not hung up
both work but double time cycling when if statements wrapped around html blocks alone. 104 file version on shopify
no animation if if statements wrapped around  html and script. just title prints
by cycling, I mean (Console messages of math). not hanging up. maybe hung up before because there was <!-- --> liquid
{% endcomment %}

{% style %}
.title-Z {
  z-index: 200000;
}
  @media only screen and (min-width:769px){
    .view-padding {
      padding-right: 25%;
      padding-left: 25%;
    }
    .wave-header {
      font-size: calc(var(--typeHeaderSize)*1.3);
    }
  }
  @media only screen and (max-width:768px){
    .wave-header {
      font-size: calc(var(--typeHeaderSize)*1);
    }
  }
{% endstyle %}

            <script>
              console.clear();

              var textPath = document.querySelector('#text-path');
              var textContainer = document.querySelector('#text-container');
              var path = document.querySelector( textPath.getAttribute('href') );
              var pathLength = path.getTotalLength();
              console.log(pathLength);

              function updateTextPathOffset(offset){
                textPath.setAttribute('startOffset', offset); 
              }

              updateTextPathOffset(pathLength);

              function onScroll(){
                requestAnimationFrame(function(){
                  var rect = textContainer.getBoundingClientRect();
                  var scrollPercent = rect.y / window.innerHeight;
                  console.log(scrollPercent);
                  updateTextPathOffset( -scrollPercent * 0.5 * pathLength );
                });
              }

              window.addEventListener('scroll',onScroll);
            </script>

{% if section.settings.title contains 'NEW DROPS' %}
            <svg id="text-container" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg" >
              <path id="text-curve" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text x="240">
                <textPath id="text-path" href="#text-curve" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath2 = document.querySelector('#text-path2');
              var textContainer2 = document.querySelector('#text-container2');
              var path2 = document.querySelector( textPath2.getAttribute('href') );
              var pathLength2 = path2.getTotalLength();
              console.log(pathLength2);

              function updateTextPathOffset2(offset2){
                textPath2.setAttribute('startOffset', offset2); 
              }

              updateTextPathOffset2(pathLength2);

              function onScroll2(){
                requestAnimationFrame(function(){
                  var rect2 = textContainer2.getBoundingClientRect();
                  var scrollPercent2 = rect2.y / window.innerHeight;
                  console.log(scrollPercent2);
                  updateTextPathOffset2( -scrollPercent2 * .5 * pathLength2 );
                });
              }

              window.addEventListener('scroll',onScroll2);
            </script>

{% if section.settings.title contains 'RED WINES' %}
            <svg id="text-container2" viewBox="0 -20 1000 180"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve2" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text x="240">
                <textPath id="text-path2" href="#text-curve2" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath3 = document.querySelector('#text-path3');
              var textContainer3 = document.querySelector('#text-container3');
              var path3 = document.querySelector( textPath3.getAttribute('href') );
              var pathLength3 = path3.getTotalLength();
              console.log(pathLength3);

              function updateTextPathOffset3(offset3){
                textPath3.setAttribute('startOffset', offset3); 
              }

              updateTextPathOffset3(pathLength3);

              function onScroll3(){
                requestAnimationFrame(function(){
                  var rect3 = textContainer3.getBoundingClientRect();
                  var scrollPercent3 = rect3.y / window.innerHeight;
                  console.log(scrollPercent3);
                  updateTextPathOffset3( scrollPercent3 * 2 * pathLength3 );
                });
              }

              window.addEventListener('scroll',onScroll3);
            </script>

{% if section.settings.title contains 'WHITE WINES' %}
            <svg id="text-container3" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve3" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text x="240">
                <textPath id="text-path3" href="#text-curve3" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath4 = document.querySelector('#text-path4');
              var textContainer4 = document.querySelector('#text-container4');
              var path4 = document.querySelector( textPath4.getAttribute('href') );
              var pathLength4 = path4.getTotalLength();
              console.log(pathLength4);

              function updateTextPathOffset4(offset4){
                textPath4.setAttribute('startOffset', offset4); 
              }

              updateTextPathOffset4(pathLength4);

              function onScroll4(){
                requestAnimationFrame(function(){
                  var rect4 = textContainer4.getBoundingClientRect();
                  var scrollPercent4 = rect4.y / window.innerHeight;
                  console.log(scrollPercent4);
                  updateTextPathOffset4( scrollPercent4 * 2 * pathLength4 );
                });
              }

              window.addEventListener('scroll',onScroll4);
            </script>

{% if section.settings.title contains 'ROSÃ‰ WINES' %}
            <svg id="text-container4" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve4" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path4" href="#text-curve4" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath5 = document.querySelector('#text-path5');
              var textContainer5 = document.querySelector('#text-container5');
              var path5 = document.querySelector( textPath5.getAttribute('href') );
              var pathLength5 = path5.getTotalLength();
              console.log(pathLength5);

              function updateTextPathOffset5(offset5){
                textPath5.setAttribute('startOffset', offset5); 
              }

              updateTextPathOffset5(pathLength5);

              function onScroll5(){
                requestAnimationFrame(function(){
                  var rect5 = textContainer5.getBoundingClientRect();
                  var scrollPercent5 = rect5.y / window.innerHeight;
                  console.log(scrollPercent5);
                  updateTextPathOffset5( scrollPercent5 * 2 * pathLength5 );
                });
              }

              window.addEventListener('scroll',onScroll5);
            </script>

{% if section.settings.title contains 'ORANGE WINES' %}
            <svg id="text-container5" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve5" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path5" href="#text-curve5" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath6 = document.querySelector('#text-path6');
              var textContainer6 = document.querySelector('#text-container6');
              var path6 = document.querySelector( textPath6.getAttribute('href') );
              var pathLength6 = path6.getTotalLength();
              console.log(pathLength6);

              function updateTextPathOffset6(offset6){
                textPath6.setAttribute('startOffset', offset6); 
              }

              updateTextPathOffset6(pathLength6);

              function onScroll6(){
                requestAnimationFrame(function(){
                  var rect6 = textContainer6.getBoundingClientRect();
                  var scrollPercent6 = rect6.y / window.innerHeight;
                  console.log(scrollPercent6);
                  updateTextPathOffset6( scrollPercent6 * 2 * pathLength6 );
                });
              }

              window.addEventListener('scroll',onScroll6);
            </script>

{% if section.settings.title contains 'SPARKLING' %}
            <svg id="text-container6" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve6" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path6" href="#text-curve6" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath7 = document.querySelector('#text-path7');
              var textContainer7 = document.querySelector('#text-container7');
              var path7 = document.querySelector( textPath7.getAttribute('href') );
              var pathLength7 = path7.getTotalLength();
              console.log(pathLength7);

              function updateTextPathOffset7(offset7){
                textPath7.setAttribute('startOffset', offset7); 
              }

              updateTextPathOffset7(pathLength7);

              function onScroll7(){
                requestAnimationFrame(function(){
                  var rect7 = textContainer7.getBoundingClientRect();
                  var scrollPercent7 = rect7.y / window.innerHeight;
                  console.log(scrollPercent7);
                  updateTextPathOffset7( scrollPercent7 * 2 * pathLength7 );
                });
              }

              window.addEventListener('scroll',onScroll7);
            </script>

{% if section.settings.title contains 'CIDER' %}
            <svg id="text-container7" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve7" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path7" href="#text-curve7" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath8 = document.querySelector('#text-path8');
              var textContainer8 = document.querySelector('#text-container8');
              var path8 = document.querySelector( textPath8.getAttribute('href') );
              var pathLength8 = path8.getTotalLength();
              console.log(pathLength8);

              function updateTextPathOffset8(offset8){
                textPath8.setAttribute('startOffset', offset8); 
              }

              updateTextPathOffset8(pathLength8);

              function onScroll8(){
                requestAnimationFrame(function(){
                  var rect8 = textContainer8.getBoundingClientRect();
                  var scrollPercent8 = rect8.y / window.innerHeight;
                  console.log(scrollPercent8);
                  updateTextPathOffset8( scrollPercent8 * 2 * pathLength8 );
                });
              }

              window.addEventListener('scroll',onScroll8);
            </script>

{% if section.settings.title contains 'BEERS' %}
            <svg id="text-container8" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve8" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path8" href="#text-curve8" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath9 = document.querySelector('#text-path9');
              var textContainer9 = document.querySelector('#text-container9');
              var path9 = document.querySelector( textPath9.getAttribute('href') );
              var pathLength9 = path9.getTotalLength();
              console.log(pathLength9);

              function updateTextPathOffset9(offset9){
                textPath9.setAttribute('startOffset', offset9); 
              }

              updateTextPathOffset9(pathLength9);

              function onScroll9(){
                requestAnimationFrame(function(){
                  var rect9 = textContainer9.getBoundingClientRect();
                  var scrollPercent9 = rect9.y / window.innerHeight;
                  console.log(scrollPercent9);
                  updateTextPathOffset9( scrollPercent9 * 2 * pathLength9 );
                });
              }

              window.addEventListener('scroll',onScroll9);
            </script>

{% if section.settings.title contains 'LA TIENDA' %}
            <svg id="text-container9" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve9" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path9" href="#text-curve9" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

            <script>
              console.clear();

              var textPath10 = document.querySelector('#text-path10');
              var textContainer10 = document.querySelector('#text-container10');
              var path10 = document.querySelector( textPath10.getAttribute('href') );
              var pathLength10 = path10.getTotalLength();
              console.log(pathLength10);

              function updateTextPathOffset10(offset10){
                textPath10.setAttribute('startOffset', offset10); 
              }

              updateTextPathOffset10(pathLength10);

              function onScroll10(){
                requestAnimationFrame(function(){
                  var rect10 = textContainer10.getBoundingClientRect();
                  var scrollPercent10 = rect10.y / window.innerHeight;
                  console.log(scrollPercent10);
                  updateTextPathOffset10( scrollPercent10 * 2 * pathLength10 );
                });
              }

              window.addEventListener('scroll',onScroll10);
            </script>

{% if section.settings.title contains 'SPIRITS' %}
            <svg id="text-container10" viewBox="0 0 1000 200"  xmlns="http://www.w3.org/2000/svg">
              <path id="text-curve10" d="M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0" fill="none"/>
              <text y="40">
                <textPath id="text-path10" href="#text-curve10" startOffset="200">
            {{ section.settings.title }}
                </textPath>
              </text>
            </svg>
{% endif %}

{% comment %} end added code. {% endcomment %}



            </h2>
            {%- if section.settings.description != blank -%}
              <div class="rte section-header__description section-header__description--large appear-delay-1">
                {{ section.settings.description }}
              </div>
            {%- endif -%}
          </header>
        </div>
      {%- endif -%}

      <div class="overflow-scroll-wrap" data-ajax-loader>
        <button
          type="button"
          class="btn btn--tertiary overflow-scroller__arrow overflow-scroller__arrow--left overflow-scroller--disable-left small--hide"
          {% unless scrollable %}hidden{% endunless %}
          aria-hidden="true"
          aria-label="{{ 'general.pagination.previous' | t }}"
          data-arrow>
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-left" viewBox="0 0 284.49 498.98"><path d="M249.49 0a35 35 0 0 1 24.75 59.75L84.49 249.49l189.75 189.74a35.002 35.002 0 1 1-49.5 49.5L10.25 274.24a35 35 0 0 1 0-49.5L224.74 10.25A34.89 34.89 0 0 1 249.49 0z"/></svg>
        </button>
        <button
          type="button"
          class="btn btn--tertiary overflow-scroller__arrow overflow-scroller__arrow--right small--hide"
          {% unless scrollable %}hidden{% endunless %}
          aria-hidden="true"
          aria-label="{{ 'general.pagination.next' | t }}"
          data-arrow>
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-right" viewBox="0 0 284.49 498.98"><path d="M35 498.98a35 35 0 0 1-24.75-59.75l189.74-189.74L10.25 59.75a35.002 35.002 0 0 1 49.5-49.5l214.49 214.49a35 35 0 0 1 0 49.5L59.75 488.73A34.89 34.89 0 0 1 35 498.98z"/></svg>
        </button>
        <div
          class="overflow-scroller"
          data-pagination-wrapper>
          <div
            class="grid grid--uniform grid--scattered-large-2 grid--scattered-small-2"
            data-aos="overflow__animation"
            data-product-container>

            {%- if
              section.settings.home_featured_products == blank
              or collections[section.settings.home_featured_products].empty?
              or collections[section.settings.home_featured_products].products_count == 0 -%}

              {%- for i in (1..paginate_by) -%}
                <div class="grid__item grid-product {{ grid_item_width }}{% if settings.product_hover_details %} grid-product__hover-details{% endif %}">
                  <div class="grid-product__content">
                    <a href="{{ product.url | within: collection }}" class="grid-product__link {% if sold_out %} grid-product__link--disabled{% endif %}">
                      <div class="product-slider"
                        data-image-count="1"
                        data-id="1234">
                        <div class="product-slide">
                          {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                          <div class="image-wrap">{{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}</div>
                        </div>
                      </div>
                      <div class="grid-product__meta">
                        <div class="grid-product__title">{{ 'home_page.onboarding.product_title' | t }}</div>
                        <div class="grid-product__price">$29</div>
                      </div>
                    </a>
                  </div>
                </div>
              {%- endfor -%}

            {%- else -%}

              {%- for product in collections[section.settings.home_featured_products].products limit: paginate_by -%}
                {%- render 'product-grid-item'
                  product: product,
                  grid_item_width: grid_item_width
                -%}
              {%- endfor -%}

            {%- endif -%}
          </div>
        </div>
      </div>
    </div>

  </div>

  {% schema %}
    {
      "name": "Featured collection",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Featured collection"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description"
        },
        {
          "type": "collection",
          "id": "home_featured_products",
          "label": "Collection"
        },
        {
          "type": "select",
          "id": "per_row",
          "label": "Products per row",
          "default": "small",
          "options": [
            {
              "value": "small",
              "label": "3"
            },
            {
              "value": "medium",
              "label": "4"
            },
            {
              "value": "large",
              "label": "5"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "alt",
          "label": "Use alternate section color"
        }
      ],
      "presets": [{
        "name": "Featured collection",
        "category": "Collection"
      }],
      "blocks" : []
    }
  {% endschema %}
